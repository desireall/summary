



如socket，buffer，线程池，keep alive ，websocket，nio ，netty，rpc，soap协议。


了解一下aqs模型，同步，并发包，collection包中没用过的数据结构，信号量，生产者消费者模型，可重入锁，自旋锁，写锁，读锁。
普通中断线程的方法，阻塞的io的中断方法，异步类比如future，callable，看看有没有什么线程切换过多，io阻塞什么的问题。


了解一下class类，class loader。



增删查改，大概是数据库吧。
了解长查询，短查询。了解数据库如何加锁减少锁住整个表的几率。
了解如何优化sql语句，加快查询。
了解一下jdbc是怎么加载驱动的，读一下数据库的书，看看数据库的acid模型，各种锁什么行锁，表锁的代价，事务，什么索引什么的。
了解一下数据库备份比如什么热备，多机同步。


了解一下HTTPS，看看人月神话。
了解大概是23钟设计模式。
了解一下解决内存泄露的方法，比如弱引用什么的，学会正确持有和释放对象，不然out of memory很麻烦。
了解注解。

了解一下缓存cache策略，比如okhttp里面的lru算法啦。


了解一下redis的源码和主要功能，怎么实现无锁的啦。


复习编译原理，看看加密或者编码的包，什么md5，regex，dfa，nfa。
自己写个框架或者工具库。学一下怎么做好漂亮的封装，学习写好一手漂亮的注释，学习如何写好漂亮的文档。


学习负载均衡。

补补算法，数据结构，补补前端设计功底，学一下游戏设计，了解一下游戏数据帧同步。数值设计。看看傅里叶变换，拉普拉斯变换。

了解一下反射，unsafe包。

看看Hadoop源码，听说里面有netty，所以看过netty应该轻松一点。


回忆一下统计和概率论，做做大数据。或者看看tomcat的源码，人家是怎么封装的，怎么分发的。看看jvm的输出，看看内存泄露死锁什么的。


java的垃圾回收测试一下修改一下参数看看有什么不同。上上github，在stack overflow 刷分。

学学怎么用java爬虫。

试试调用jni。


你要是还能继续就复习一下c++，看看jvm源码，找bug


熟悉Mysql等数据库，熟悉NoSQL存储，有Hadoop/Storm/Spark实践经验，了解基本原理




